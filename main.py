import matplotlib.pyplot as plt
import numpy as np
from grid.grid import Grid
from maps.domain import Domain, Pop, Res

from matplotlib.animation import FuncAnimation, PillowWriter
from PIL import Image


niter = 150
scale = 1
lenN = 100

dt = 0.01
dx = 500 #km

Europe = Domain('maps/europe')

count = 0
start = []
Nstart = []

while(count) < lenN:
    i = np.random.randint(10, Europe.shape[0]-10)
    j = np.random.randint(10, Europe.shape[1]-10)

    if Europe.I[i,j] != 0:
        count +=1
        start.append([i,j])
        Nstart.append(100)

N = Pop(0.5, #maximum consumption rate per person (pop^-1.year^-1)
        10, #R needed to reach half of maximum consumption rate (res)
        0.4, #population generated by max consumption (pop)
        0.02, #pop natural death rate (year^-1)
        10, #foundingp pop
        100,) # carrying capacity (pop)


R =  Res(0.2, #resource natural growth
         60) #resource carrying capacity

sim = Grid(Nstart,
           start,
           N,
           R,
           Europe,
           0.01, #alpha -- production taxation (%.year^-1)
           10, #range
           dt)

fig, ax = plt.subplots()
plt.axis('off')


im=plt.imshow(sim.get_img())
ax.set_title(f'Year: 0')


def animate(i):
    for _ in range(scale):
        sim.update()
    im.set_array(sim.get_img())
    ax.set_title(f'Year: {i*scale*dt}, {len(sim.states)} states, {len(sim.N)} cities')

    print(f"step {i}\r", sep=' ', end='', flush=True)
    return [im]

writer = PillowWriter(fps=15)
anim = FuncAnimation(fig, animate, frames = niter, blit=False, interval = 100)
#anim.save('out.gif', writer=writer)
plt.show()
