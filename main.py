import matplotlib.pyplot as plt
import numpy as np
from grid.grid import Grid
from maps.domain import Domain, Pop, Res, State

from matplotlib.animation import FuncAnimation, PillowWriter
from PIL import Image


Europe = Domain('maps/europe')
Europe.resize(20)

niter = 500
scale = 1
lenN = 15

count = 0
start = []
Nstart = []

while(count) < lenN:
    i = np.random.randint(10, Europe.shape[0]-10)
    j = np.random.randint(10, Europe.shape[1]-10)

    if Europe.I[i,j] != 0:
        count +=1
        start.append([i,j])
        Nstart.append(100)

N = Pop(start, #array with starting location coordonates
        Nstart, #start populations (pop)
        0.5, #maximum consumption rate per person (pop^-1.year^-1)
        10, #R needed to reach half of maximum consumption rate (res)
        10, #population generated by max consumption (pop)
        0.02, #pop natural death rate (year^-1)
        20, #barbarian population level (pop)
        700, #Diffusion coefficient
        0.001) #Drift coefficien)


R =  Res(20, #resource natural growth
         80) #resource carrying capacity

sim = Grid(N,
           R,
           Europe,
           10, # production rate (money.resource^-1.year^-1)
           1, # eps -- ressource extraction capacity (%)
           0.01, #C growth rate (year^-1)
           0.01, #alpha -- production taxation (%.year^-1)
           0.01,# s0 -- Asabiya growth rate
           10, # power decline speed with distance (km)
           31)#z -- power decline speed with money (money)


fig = plt.figure()
im=plt.imshow(sim.get_img())

def animate(i):
    for _ in range(scale):
        sim.update()
    im.set_array(sim.get_img())

    print(f"step {i}\r", sep=' ', end='', flush=True)
    return [im]

writer = PillowWriter(fps=15)
anim = FuncAnimation(fig, animate, frames = niter, interval = 1000)
#anim.save('out.gif', writer=writer)
plt.colorbar()
plt.show()
